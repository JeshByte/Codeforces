When we have to add a number(say a) to a given position(say i), it should be such that a<=min(all elements till i-1)(we will call it mi) and a>vi where vi is the current value at ith index. So if bi(which is the final needed value at i) is already <=mi, then we can directly add bi to get the final value. Now if bi is greater, then the max possible number that can be added is mi. But if you add mi first then you won't be able to add any other number at i because if it is greater than mi, then it will get added to an index<i and if it is <=mi then it will get added to an index>i. So the only possibility here is to add bi-mi first then mi which would give us bi. This can be done only when bi-mi<mi. Thus we just need to check for either of these 2 conditions which can be done in O(n) using a suffix minimum array.  
