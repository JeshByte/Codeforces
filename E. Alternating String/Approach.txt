If the string is of even length, then we can just look at the even and odd positions seperately and change the letters to that of the maximum frequency. In case of odd length, we will have to check that deleting which character will be optimal. For that we can maintain a prefix map and an overall map for the frequencies. When we delete a character, the odd frequencies before that character will be from the prefix map. The ones after it will be from the overall even map(because of the shift due to the deletion) after subtracting the frequencies from the prefix even map. It is the same for the even frequencies. This way we can create a new frequency map for each character deletion and find the optimal answer. As there are only 26 characters we can freely traverse through the maps within the outer loop. 
