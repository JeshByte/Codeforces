As it is a bit manipulation problem, we would look at it on the binary level. At every bit, for a given number its contribution is dependent on the number of different bits in that position(because of XOR's property). So for a given fixed number we can find its contribution in O(32). For this we basically need to precompute the number of zeroes and ones in each bit position. Having these, we can then go through each number and check for the one with the maximum contribution in O(32*n) which is equivalent to O(n).
