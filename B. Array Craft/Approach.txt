So, first we should observe that y<x for all cases. So the final array will look like this(assuming n=7) - _ _ y _ x _ _ . So the prefix sum should be maximum at x(lets call it pm). After that the prefix sum should never go beyond pm. Thus we can alternate -1 and +1 after xth position to keep the prefix sum<=pm. So the array becomes - _ _ y _ x -1 1 . Now similarly the suffix sum should be maximum at y(lets call it sm). So here also we can put alternate -1 and +1 after yth position to keep the suffix sum <=sm. So the array becomes 1 -1 y _ x -1 +1. So now we can observe that both sm and pm here would depend on the numbers placed in and between x and y. So we just put ones here. Thus for n=7 in this case, the array will be 1 -1 1 1 1 -1 +1. If we follow this pattern for all cases, we will always get an optimal answer. 
