So if we dry run the given test cases where it is not possible to sort them, we will observe that the problem here is that the minimum element reaches the first position before the rest of the array gets sorted. We can then see that if the array can be sorted it will have to be done by applying the operations on the elements before the min element one by one. As on applying this operation none of these elements can go beyond the min element, it means that the number of operations is fixed at the number of elements present before the min element. Now we just need to figure out how to check whether sorting the given array will be possible or not. On dry running a few more test cases we will observe that for the array to be sortable the subarray after the min element needs to be already sorted. Thus we can just check for that condition. If it is true, the answer will just be the number of elements before the min element otherwise it is impossible.
