So what we can do is maintain two sets. One set will have all the positions and the other one will have all the tables. When we get ti=0, we find the closest table from the table set. Then we remove that table from the table set and that particular position from the position set. When we get ti=1, we find the closest position from the position set. Then we remove that table and position from their respective sets and so on. But here we are dealing with infinite tables so we initially can't push them all into our sets. So initially we know we only need the closest 3 tables so we just push them. Then whenever a position in a table gets occupied we will push it's adjacent tables. We can go for the 5 adjacent ones to be safe. Now to calculate the distance, in a table there are 4 points - (3x+1,3y+1),(3x+1,3y+2),(3x+2,3y+1),(3x+2,3y+2). For the last one the distance comes out to be sum of coordinates + 2 and for others it is just sum of coordinates. So by using this and following the above algorithm we can find our result.
