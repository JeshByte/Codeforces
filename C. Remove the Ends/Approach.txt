So when we choose a positive number all the numbers before it get deleted. So it's always optimal to choose the leftmost positive number. Similarly it's always optimal to choose the rightmost negative number. Now if we simulate performing the operations repeatedly on certain test cases we will see that each time effectively we are choosing all the positive numbers upto a certain point and after that point we are choosing all the negative numbers. So we can simply go through all the possible partitions and check which one is giving us the maximum sum. We will have to use prefix sum arrays to implement this.
