So, I need to pair each element in a with an element in b such that the minimum absolute difference between them is maximised. In the problem statement it is given that n^2 is within limits so its obvious that the solution has to be done in n^2. So, first thing I go for is sorting. Then, I should try to find patterns there. I would then realise that this won't give me the best possible answer every time. So another approach I could think of was binary search where I could perform binary search on the minimum difference I want to maintain. But that also doesn't work because there is no monotonic pattern here. So, here we would need to use the lemma - that if there is any valid pairing in two sorted arrays where a(i)-b(j)>=k then you can shift the arrays in such a manner that you could also create a pairing where a(i)-b(i)>=k. So, we could do this in 2 ways - 
1) Check for all cyclic shifts to find the optimal answer. This works but is an approximation of the actual solution.
2) You will end up making 2 kinds of pairings - where a(i)>b(i) and a(i)<b(i). So lets say you make t pairs of the first kind and n-t pairs of the same. Then for the t pairs you can simply match the biggest a(i)s with the smallest b(i)s and vice-versa for the other n-t pairs.
